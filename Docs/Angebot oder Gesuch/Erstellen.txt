
User Story for Offers and Search :

1. If the verified user with an active membership opens the main page as logged-in, they will see offers and requests from other members on the start page. 
2. A user can search for an offer based on the Skills and Regions
3. The user can "Apply" for an offer where the request of user will be sent to the host who has created an offer, once the host accepts the offer, they connect over Facebook and reach to an agreement.

Navigate to "Backend" folder, run the project file in Visual Studio 2022 and open "Offers" Controller which handles the requests to Add, Update or Delete an offer. 

API Endpoints in Offers controller:

1. HttpGet("offer/get-all-offers") : Responsible to Get all the offers from Database
2. HttpGet("offer/get-offer-by-id/{OfferId:int}") : Responsible to Get a specific offer by ID
3. HttpPost("offer/add-new-offer") : Holds the responsibility to add an offer in database
4. HttpPut("offer/update-offer"): Holds the responsibility to update an offer if needs to get updated 
5. HttpDelete("offer/delete-offer/{OfferId:int}"): Holds the responsibility to delete an offer (Can be done by the creator of offer)

Frontend: 

Navigate to the root directory of your project and open Frontend-Vuetify folder and open Visual studio code on the selected path: 

Install dependencies:

Project setup
-----------------------
While using "yarn"
yarn

if using "npm"
npm install

if using "pnpm"
pnpm install

if using bun 
bun install
------------------------

Compiling and hot-reloading for development

------------------------
While using  "yarn"
yarn dev

While using "npm"
npm run dev

While using "pnpm"
pnpm dev

While using "bun"
bun run dev
------------------------

Compiling and minifizing files for production

------------------------
While using "yarn"
yarn build

While using  "npm"
npm run build

While using "pnpm"
pnpm build

While using "bun"
bun run build
-------------------------

Lints and fixes files

--------------------------
While using "yarn"
yarn lint

While using "npm"
npm run lint

While using "pnpm"
pnpm lint

While using "bun"
bun run lint
-------------------------

1. OfferDetail.vue: 
This file is reponsible to display the offers and the details of the offer when clicked on the "Details" button from the offer card!

2. OfferRequest.vue: 
This file holds the responsibility to request for an offer. Let's say we have User A who clicks on an Offer to request for it, the request will be sent to the creator of the offer who has the leverage to accept or decline the request. Once the request is accepted the users can connect on Facebook and reach to an agreement. 
 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

User Story für Angebote und Suche:

1. Wenn der verifizierte Benutzer mit einer aktiven Mitgliedschaft die Hauptseite als eingeloggt öffnet, werden ihm auf der Startseite Angebote und Gesuche anderer Mitglieder angezeigt. 
2. Ein Benutzer kann basierend auf den Fähigkeiten und Regionen nach einem Angebot suchen
3. Der Benutzer kann sich für ein Angebot „bewerben“, wobei die Anfrage des Benutzers an den Gastgeber gesendet wird, der ein Angebot erstellt hat. Sobald der Gastgeber das Angebot annimmt, verbinden sie sich über Facebook und treffen eine Vereinbarung.

Navigieren Sie zum Ordner „Backend“, führen Sie die Projektdatei in Visual Studio 2022 aus und öffnen Sie den „Offers“-Controller, der die Anfragen zum Hinzufügen, Aktualisieren oder Löschen eines Angebots verarbeitet. 

API-Endpunkte im Angebotscontroller:

1. HttpGet("offer/get-all-offers"): Verantwortlich dafür, alle Angebote aus der Datenbank abzurufen
2. HttpGet("offer/get-offer-by-id/{OfferId:int}"): Verantwortlich für den Erhalt eines bestimmten Angebots anhand der ID
3. HttpPost("offer/add-new-offer"): Trägt die Verantwortung, ein Angebot zur Datenbank hinzuzufügen
4. HttpPut("offer/update-offer"): Trägt die Verantwortung, ein Angebot zu aktualisieren, wenn es aktualisiert werden muss 
5. HttpDelete("offer/delete-offer/{OfferId:int}"): Trägt die Verantwortung, ein Angebot zu löschen (kann vom Ersteller des Angebots durchgeführt werden)

Frontend: 

Navigieren Sie zum Stammverzeichnis Ihres Projekts, öffnen Sie den Ordner „Frontend-Vuetify“ und öffnen Sie Visual Studio-Code im ausgewählten Pfad: 

Abhängigkeiten installieren:

Projektaufbau
-----------------------
While using "yarn"
yarn

if using "npm"
npm install

if using "pnpm"
pnpm install

if using bun 
bun install
------------------------

Kompilieren und Hot-Reloading für die Entwicklung
------------------------
While using  "yarn"
yarn dev

While using "npm"
npm run dev

While using "pnpm"
pnpm dev

While using "bun"
bun run dev
------------------------

Kompilieren und Minimieren von Dateien für die Produktion

------------------------
While using "yarn"
yarn build

While using  "npm"
npm run build

While using "pnpm"
pnpm build

While using "bun"
bun run build
-------------------------

Lints und Fixes von Dateien

--------------------------
While using "yarn"
yarn lint

While using "npm"
npm run lint

While using "pnpm"
pnpm lint

While using "bun"
bun run lint
-------------------------

1. OfferDetail.vue: 
Diese Datei ist dafür verantwortlich, die Angebote und die Details des Angebots anzuzeigen, wenn auf der Angebotskarte auf die Schaltfläche „Details“ geklickt wird!

2. OfferRequest.vue: 
Diese Datei ist für die Angebotsanfrage verantwortlich. Nehmen wir an, wir haben Benutzer A, der auf ein Angebot klickt, um es anzufordern. Die Anfrage wird an den Ersteller des Angebots gesendet, der die Möglichkeit hat, die Anfrage anzunehmen oder abzulehnen. Sobald die Anfrage angenommen wurde, können sich die Benutzer auf Facebook verbinden und eine Einigung erzielen.







